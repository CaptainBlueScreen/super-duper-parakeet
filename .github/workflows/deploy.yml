# Simple workflow for deploying angular app content to GitHub Pages
name: Deploy angular app to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: nodeCache
        uses: actions/cache@v3
        with:
          path: ./${{ vars.APP_NAME }}/node_modules
          key: ${{ runner.os }}-${{ vars.APP_NAME }}-node-cache-${{ hashFiles('**/package-lock.json') }}
      - name: npm commands
        working-directory: ./${{ vars.APP_NAME }}
        run: |
          npm install
          npm run build -- --base-href /${{ github.event.repository.name }}/
      - uses: actions/upload-pages-artifact@v2
        with:
          name: ${{ vars.APP_NAME }}
          path: ./${{ vars.APP_NAME }}/dist/${{ vars.APP_NAME }}/
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub 
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: ${{ vars.APP_NAME }}
  gcp:
    needs: build
    runs-on: ubuntu-latest
    permissions:
     contents: 'read'
     id-token: 'write'

    steps:
     - name: 'Google auth'
       id: 'auth'
       uses: 'google-github-actions/auth@v1'
       with:
         workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
         service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'
